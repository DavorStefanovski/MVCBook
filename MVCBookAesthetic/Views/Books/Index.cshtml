@model MVCBookAesthetic.ViewModels.BookGenreViewModel

@{
    ViewData["Title"] = "Books";
}

<h1>Books</h1>
@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <p>
    <a asp-action="Create">Create New</a>
</p>}

<style>
    .zoom-effect:hover {
        transform: scale(1.1);
        transition: transform 0.3s ease;
    }
</style>
<form asp-action="Index" method="get">
    <div class="row mb-5 align-items-end">
        <div class="col-md-3">
            <div class="form-group">
                <label for="searchTitle">Search by Title:</label>
                <input type="text" id="searchTitle" asp-for="searchTitle" class="form-control" />
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label for="searchAuthor">Search by Author:</label>
                <input type="text" id="searchAuthor" asp-for="searchAuthor" class="form-control" />
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label for="searchGenre">Search by Genre:</label>
                <select asp-for="searchGenre" asp-items="Model.Genres" class="form-control">
                    <option value="">All</option>
                </select>
            </div>
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
    
</form>




<div class="row">
    @foreach (var item in Model.Books)
    {
        <div class="col-md-4 mb-4">
            <div class="card">
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary zoom-effect" style="padding:0;"><img src="@item.FrontPage" class="card-img-top" alt="Book Cover" style="margin:0;"></a>
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                    <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">Author: @Html.DisplayFor(modelItem => item.Author.FullName)</li>
                        <li class="list-group-item">Published: @Html.DisplayFor(modelItem => item.YearPublished)</li>
                        <li class="list-group-item">Publisher: @Html.DisplayFor(modelItem => item.Publisher)</li>
                        <li class="list-group-item">
                            Genres:
                            @foreach (var genre in item.Genres)
                            {
                                <a asp-controller="Genres" asp-action="Details" asp-route-id="@genre.GenreId">@genre.Genre.GenreName</a>
                                if (!genre.Equals(item.Genres.Last()))
                                {
                                    <span>, </span>
                                }
                            }
                        </li>
                    </ul>
                </div>
                <div class="card-footer">
                    <a href="@item.DownloadUrl" class="btn btn-primary" download>Read</a>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                    }
                    @if (User.Identity.IsAuthenticated && User.IsInRole("User"))
                    {
                        <a asp-controller="UserBooks" asp-action="Create" asp-route-id="@item.Id" class="btn btn-success">Buy</a>
                    }
                </div>
            </div>
        </div>
    }
</div>


